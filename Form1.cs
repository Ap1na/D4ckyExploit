using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using EasyExploits;
using WeAreDevs_API;

namespace D4ckyExploit
{
    public partial class Form1 : Form
    {
        ExploitAPI api = new ExploitAPI();
        EasyExploits.Module module = new EasyExploits.Module();
        public Form1()
        {
            InitializeComponent();
        }

        private void richTextBox1_TextChanged(object sender, EventArgs e)
        {

        }

        private void flatButton7_Click(object sender, EventArgs e)
        {
            Process[] roblox = Process.GetProcesses();

            foreach (Process openedroblox in roblox)

            {

                bool flag = openedroblox.ProcessName == "RobloxPlayerBeta";

                if (flag)

                {

                    openedroblox.Kill();

                }

            }
        }

        private void flatButton1_Click(object sender, EventArgs e)
        {
            if(checkBox1.Checked == true)
            {
                string script = fastColoredTextBox1.Text;
                api.SendLimitedLuaScript(script);
            }
            if (checkBox2.Checked == true)
            {
                module.ExecuteScript(fastColoredTextBox1.Text);
            }
        }

        private void flatButton2_Click(object sender, EventArgs e)
        {
            OpenFileDialog opendialogfile = new OpenFileDialog();
            opendialogfile.Filter = "Lua File (*.lua)|*.lua|Text File (*.txt)|*.txt";
            opendialogfile.FilterIndex = 2;
            opendialogfile.RestoreDirectory = true;
            if (opendialogfile.ShowDialog() != DialogResult.OK)
                return;
            try
            {
                fastColoredTextBox1.Text = "";
                System.IO.Stream stream;
                if ((stream = opendialogfile.OpenFile()) == null)
                    return;
                using (stream)
                    this.fastColoredTextBox1.Text = System.IO.File.ReadAllText(opendialogfile.FileName);
            }
            catch (Exception ex)
            {
                int num = (int)MessageBox.Show("An unexpected error has occured", "OOF!", MessageBoxButtons.OK, MessageBoxIcon.Information);

            }
        }

        private void flatButton3_Click(object sender, EventArgs e)
        {
            fastColoredTextBox1.Clear();
        }

        private void flatButton4_Click(object sender, EventArgs e)
        {
            if (checkBox1.Checked == true)
            {
                api.LaunchExploit();
            }
            if (checkBox2.Checked == true)
            {
                module.LaunchExploit();
            }
        }

        private void flatButton10_Click(object sender, EventArgs e)
        {

        }

        private void flatButton8_Click(object sender, EventArgs e)
        {
            if (checkBox1.Checked == true)
            {
                api.LaunchExploit();
            }
            if (checkBox2.Checked == true)
            {
                module.LaunchExploit();
            }
        }

        private void flatButton5_Click(object sender, EventArgs e)
        {
            TopMost = true;
        }

        private void flatButton6_Click(object sender, EventArgs e)
        {
            TopMost = false;
        }

        private void flatButton10_Click_1(object sender, EventArgs e) //easyexploits button
        {

        }

        private void flatButton9_Click(object sender, EventArgs e) //wearedevs button
        {

        }

        private void tabPage2_Click(object sender, EventArgs e)
        {

        }

        private void checkBox1_CheckedChanged(object sender, EventArgs e) //wearedevs
        {

        }

        private void checkBox2_CheckedChanged(object sender, EventArgs e) //easyexploits
        {

        }
    }
}
